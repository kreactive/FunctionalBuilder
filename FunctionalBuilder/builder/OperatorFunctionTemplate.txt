public func <&><Input,[<TYPES>],U>(a : Composed[<NUM>]<Input,[<TYPES>]>, b : Input throws -> U) -> Composed[<NEXT_NUM>]<Input,[<TYPES>],U> {
    return a.and(b)
}

public func <&><Input,[<TYPES>],U : ComposeType,V where U.Input == Input, U.Output == V>(a : Composed[<NUM>]<Input,[<TYPES>]>, z : U) -> Composed[<NEXT_NUM>]<Input,[<TYPES>],V> {
    return a.and(z.pure)
}